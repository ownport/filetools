---
image: registry.gitlab.com/ownport/docker-images/python:3.8-dev-alpine

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
- test
- release
- build
- deploy

test:
  stage: test
  script:
    # - pip3 install -e .
    # - pytest 
    # # - pip install tox flake8  # you can also use tox
    # # - tox -e py36,flake8
    - /usr/sbin/dev/run-pytests.sh
  artifacts:
    reports:
      junit: report.xml


# build:
#   stage: build
#   script:
#     - python3 -m build
#     # - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     # - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#     - dist/*.whl
#     - dist/*.tar.gz
#     expire_in: 5 mins
#   only:
#   - tags


# deploy:
#   stage: deploy
#   script:
#   - >
#     TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token 
#     python3 -m twine upload 
#     --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
#     dist/*
#   only:
#   - tags
